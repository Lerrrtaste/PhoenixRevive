<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_phoenix</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0;

path_start(path_phoenix_egg,50,path_action_stop,false); //flying in
img_iteration = 0; //img index to draw
img_iteration_buffer = 0;
img_iteration_speed = 10; //chang img every x steps
img_first_spawned = 0; //crawling outta egg animation played

left_wing = 0; //l_wing alive
right_wing = 1;//r_wing alive

mDir = 0; //move direction (1=right | 0 = left)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
States:

0 = spawning (egg)
1 = alive (phoenix)
2 = hurt (no fl√ºgel)
*/

switch(state) {
    case 0: //spawning (egg)
        break;
    case 1: //alive
        if(mDir == 0) {
            //left
            hspeed = clamp(hspeed - (10-random(15)),-7,0);
            if(x &lt; room_width/4 + 100) {
            mDir = 1;
            }
        } else {
            //right
            hspeed = clamp(hspeed + (10-random(15)),0,+7);
            if(x &gt; ((room_width/4)*3)-100) {
            mDir = 0;
            }
        }
        
        
        break;
    case 2: //hurt
        break;
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player_projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
sprite subimgs
0-1 egg
1-2 egg before spawning (blinking)
2-8 egg leaving
9-10 normal flying
*/

if(img_iteration_buffer == img_iteration_speed) {
        switch(state) {
        case 0: //spawning (egg)
            if(path_position &lt; .5) {//spawn_time &gt;= spawn_time_max /2) {
                if(img_iteration = 1) { //first half (0-1)
                    img_iteration = 0;
                } else {
                    img_iteration++;
                }
            
            } else {
                if(img_iteration = 2) { //second half (1-2)
                    img_iteration = 1;
                } else {
                    img_iteration++;
                }
            }
            
            if(path_position &gt;= .9) {
                state = 1;
            }
            
            break;
            
        case 1: //alive
            if(img_first_spawned == 0) { //phoenix goes outta egg animation
                img_iteration++;
                if(img_iteration == 9) {
                    img_first_spawned = 1;
                }
            } else { //normal flying
                if(img_iteration = 10) {
                    img_iteration = 9;
                } else {
                    img_iteration++;
                }
            }
            break;
            
        case 2: //hurt
            break;
    }
}

if(img_iteration_speed == img_iteration_buffer) {
    img_iteration_buffer = 0;
} else {
    img_iteration_buffer++;
}


//draw_self();


draw_sprite_part(spr_enemy_phoenix, img_iteration, 78, 0, 115, 192, x, y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
