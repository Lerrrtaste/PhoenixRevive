<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerShip</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dirspeed = 0; // negative: moving left positive: moving right
max_speed = 15; //pixel per frame
acceleration = 4;
slowdown = 2;
fire_cooldown = room_speed/2; //min steps between fire
cooldown = 0;

y = room_height - sprite_get_height(spr_playerShip *2);
x = room_width /2;

x_min = room_width/3 ;
x_max = (room_width/3)*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//input mapping
button_left = ord('A');
button_right = ord('D');
button_shoot = vk_space;
button_shield = vk_shift;

//input checking
button_left_pressed = keyboard_check(button_left);
button_right_pressed = keyboard_check(button_right);
button_shoot_pressed = keyboard_check(button_shoot);
button_shield_pressed = keyboard_check_pressed(button_shield);

//actions

hspeed = 0; //idle
if cooldown &gt; 0 { cooldown--; }

if (button_left_pressed &amp;&amp; (x &gt;= x_min)) { //left
    hspeed = max_speed * -1;
}

if (button_right_pressed &amp;&amp; (x &lt;= x_max)) { //right
    hspeed = max_speed;
}

if (button_shoot_pressed) { //shoot
    if cooldown &lt;= 0 {
        instance_create(x,y,obj_player_projectile); 
        cooldown = fire_cooldown;
    }
}

/*
if (button_left_pressed) {
    dirspeed = clamp(dirspeed-acceleration, max_speed * -1, max_speed);
}

if (button_right_pressed) {
    dirspeed = clamp(dirspeed+acceleration, max_speed * -1, max_speed);
}

if dirspeed &gt; 0 {
    dirspeed =- slowdown;
}

if dirspeed &lt; 0 {
    dirspeed =+ slowdown;
}

hspeed = dirspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if speed == 0 {subimg = 0;} else if subimg == 1 { subimg = 0; } else if subimg == 0 { subimg = 1; }

draw_sprite_stretched(  spr_playerShip,subimg,x,y,
                        sprite_get_width(spr_playerShip)*global.sprite_resize,
                        sprite_get_height(spr_playerShip)*global.sprite_resize);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
